"use strict";function leftNodesFromPattern(a){switch(a.type){case"Identifier":return[a];case"ArrayPattern":return leftNodesFromArrayPattern(a);case"ObjectPattern":return leftNodesFromObjectPattern(a);case"AssignmentPattern":return leftNodesFromPattern(a.left);case"RestElement":return leftNodesFromPattern(a.argument);}throw["leftNodesFromPattern(): Only Identifiers, ObjectPatterns, ArrayPatterns, and AssignmentPatterns implemented: "+a.type]}function leftNodesFromArrayPattern(a){return a.elements.flatMap(leftNodesFromPatternElement).filter(function(a){return a})}function leftNodesFromObjectPattern(a){return a.properties.flatMap(leftNodesFromPatternElement).filter(function(a){return a})}function leftNodesFromPatternElement(a){if(!a){}else if("Identifier"===a.type){return a}else if("MemberExpression"===a.type){return a}else if("AssignmentPattern"===a.type){return leftNodesFromPatternElement(a.left)}else if("RestElement"===a.type){return leftNodesFromPatternElement(a.argument)}else if("ObjectProperty"===a.type){return leftNodesFromPatternElement(a.value)}else if("ArrayPattern"===a.type){return leftNodesFromArrayPattern(a)}else if("ObjectPattern"===a.type){return leftNodesFromObjectPattern(a)}else{throw["leftNodesFromPatternElement(): Pattern tracking not implemented for left nodes of type: "+a.type]}}module.exports={leftNodesFromPattern:leftNodesFromPattern};