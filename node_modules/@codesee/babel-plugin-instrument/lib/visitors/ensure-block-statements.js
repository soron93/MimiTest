"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.ensureBlockStatementsVisitor=void 0;var _core=require("@babel/core"),ensureBlockStatementsVisitor={IfStatement:function IfStatement(a){ensureBlockStatement(a,"consequent");if(a.node.alternate&&!_core.types.isIfStatement(a.node.alternate)){ensureBlockStatement(a,"alternate")}},ArrowFunctionExpression:function ArrowFunctionExpression(a){if(!_core.types.isBlockStatement(a.node.body)){var b=_core.types.returnStatement(a.node.body),c=a.node.body.loc;b.loc={start:c.start,end:c.end};a.get("body").replaceWith(_core.types.blockStatement([b]))}},ForStatement:function ForStatement(a){ensureBlockStatement(a,"body")},ForInStatement:function ForInStatement(a){ensureBlockStatement(a,"body")},ForOfStatement:function ForOfStatement(a){ensureBlockStatement(a,"body")},WhileStatement:function WhileStatement(a){ensureBlockStatement(a,"body")},DoWhileStatement:function DoWhileStatement(a){ensureBlockStatement(a,"body")}};exports.ensureBlockStatementsVisitor=ensureBlockStatementsVisitor;function ensureBlockStatement(a,b){var c=a.node[b];if(!_core.types.isBlockStatement(c)){var d=_core.types.isEmptyStatement(c)?[]:[c];a.get(b).replaceWith(_core.types.blockStatement(d))}}